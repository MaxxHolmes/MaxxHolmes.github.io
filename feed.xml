<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.1">Jekyll</generator><link href="//maxxholmes.github.io//feed.xml" rel="self" type="application/atom+xml" /><link href="//maxxholmes.github.io//" rel="alternate" type="text/html" /><updated>2020-05-12T16:53:30+01:00</updated><id>//maxxholmes.github.io//feed.xml</id><title type="html">Maxx Holmes</title><subtitle>Welcome to my website about science, programming, and my PhD journey.</subtitle><entry><title type="html">#100DaysOfCode Day 1: Project Euler Problems 1, 2 &amp;amp; 3</title><link href="//maxxholmes.github.io//100daysofcode/2020/05/11/100DaysOfCode-Day1.html" rel="alternate" type="text/html" title="#100DaysOfCode Day 1: Project Euler Problems 1, 2 &amp; 3" /><published>2020-05-11T21:00:00+01:00</published><updated>2020-05-11T21:00:00+01:00</updated><id>//maxxholmes.github.io//100daysofcode/2020/05/11/#100DaysOfCode-Day1</id><content type="html" xml:base="//maxxholmes.github.io//100daysofcode/2020/05/11/100DaysOfCode-Day1.html">&lt;p&gt;&lt;strong&gt;#100DaysOfCode Day 1: Project Euler Problems 1, 2 &amp;amp; 3&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;For the first day of my #100DaysToCode, I will be solving problems from &lt;a href=&quot;https://projecteuler.net&quot;&gt;Project Euler&lt;/a&gt;, uploading the solutions to my &lt;a href=&quot;https://github.com/MaxxHolmes&quot;&gt;GitHub&lt;/a&gt;, and producing a blog post explaining my solutions to them with code snippets to improve my use of HTML, CSS &amp;amp; Markdown. I will not be posting the actual answers to these problems as to spoil anyones fun!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Problem 1 - Multiples of 3 and 5&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23. Find the sum of all the multiples of 3 or 5 below 1000.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/MaxxHolmes/Project-Euler/blob/master/Problem_001.py&quot;&gt;Click here to see the solution on GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is a very simple problem to solve, with a single issue to take note of:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Multiples of 3 and 5 exist (multiples of 15) and they may be counted twice.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In order to avoid this problem, one can use the condition &lt;em&gt;if x % 3 == 0 or x % 5 == 0&lt;/em&gt;, for which multiples of 15 will satisfy this condition - and not require separate arithmetic. Therefore one simple way to solve this problem is the following!&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;def solution():

	answer = sum(x for x in range(1000) if (x % 3 == 0 or x % 5 == 0))

	return str(answer)

print(solution())
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Problem 2 - Even Fibonacci Numbers&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, … *
*By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/MaxxHolmes/Project-Euler/blob/master/Problem_002.py&quot;&gt;Click here to see the solution on GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is a classic fibonacci problem, with a summation.
The fibonacci sequence is defined as f(n) = f(n-1) + f(n-2), meaning that the next number in the sequence is the sum of the two preceding numbers. We simply need to find the even numbers in this sequence from 0 to 4,000,000 and sum them together.&lt;/p&gt;

&lt;p&gt;We can use the same condition as problem 1 (x % 2) to only sum the numbers evenly divisible by 2, and then add them to the answer variable and repeat this until our current fibonacci number x reachs the limit.&lt;/p&gt;

&lt;p&gt;This problem could potentially take quite a long time, so to solve this, one could use a simple loop with two variables, x and y, and accumulating the answer along the way!&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;def solution():

	answer = 0
	x = 1 # The current fibonacci number
	y = 2 # The next fibonacci number

	while x &amp;lt;= 4000000: # This is the 4 million limit
		if x % 2 == 0:
			answer += x

	x, y = y, x + y # f(n-1) -&amp;gt; f(n) and f(n) -&amp;gt; f(n+1)

	return str(answer)

print(solution())
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Problem 3 - Largest Prime Factor&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The prime factors of 13195 are 5, 7, 13 and 29.&lt;/em&gt;
&lt;em&gt;What is the largest prime factor of the number 600851475143?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/MaxxHolmes/Project-Euler/blob/master/Problem_003.py&quot;&gt;Click here to see the solution on GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To solve this problem it is helpful to look at what exactly a prime number is. An integer n is prime if, and only if, the only divisors of n are itself, and 1. If a number is not prime, then it is composite, meaning that it has some integer divisions other than itself and 1.&lt;/p&gt;

&lt;p&gt;The fundamental theorem of arithmetic &lt;a href=&quot;https://en.wikipedia.org/wiki/Fundamental_theorem_of_arithmetic&quot;&gt;source: wikipedia&lt;/a&gt; states that every integer greater than 1 is prime, or the product of 2 or more primes.&lt;/p&gt;

&lt;p&gt;We know that 2 and 3 are both prime numbers - so as such we can immediately eliminate even numbers and multiple of three, but we can significantly cut down the amount of work needed to determine whether a number is prime by realising the if a number is not prime, then it must have at least one divisor which is less, or equal to it’s square root! Any two integer factors of a number but balance around that numbers square root, for example if you consider the number 16, the square root is 4, so for a * b = 16, a = b = 4. If a were to increase to 8, then b must decrease to 2, and vice versa.&lt;/p&gt;

&lt;p&gt;Therefore, to check whether a number is prime, we can simply check to see if it has any divisors less than its square root! This means instead of generating every factor and checking if each number n is a prime, we can simply start at the smallest factor 3, and limit our search at the square root of n.&lt;/p&gt;

&lt;p&gt;This time we will make use of Python’s numpy library for the &lt;strong&gt;sqrt&lt;/strong&gt; function!&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import numpy as np

def smallest_prime(n):

	square_root = int(np.sqrt(n))
	for i in range(3, square_root + 1):
		if n % i == 0:
			return i
	return n

def solution():
	p = 3
	n = 600851475143
	while p &amp;lt; n:
		p = smallest_prime(int(n))
		if p &amp;lt; n:
			n = n // p
	else:
		return str(n)

print(solution())
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Closing Thoughts:&lt;/strong&gt; I’ve really enjoyed taking these problems and deconstructing them bit by bit, and I’m looking forward to trying the harder problems. I might start doing these regularly, maybe separate to &lt;strong&gt;#100DaysOfCode&lt;/strong&gt;, but it’s certainly put me in a very enthusiatic mood to continue to improve.&lt;/p&gt;

&lt;p&gt;Peace xo&lt;/p&gt;</content><author><name></name></author><summary type="html">#100DaysOfCode Day 1: Project Euler Problems 1, 2 &amp;amp; 3</summary></entry><entry><title type="html">#100DaysOfCode - Day: 0</title><link href="//maxxholmes.github.io//100daysofcode/2020/05/10/100DaysOfCode-Day0.html" rel="alternate" type="text/html" title="#100DaysOfCode - Day: 0" /><published>2020-05-10T23:00:00+01:00</published><updated>2020-05-10T23:00:00+01:00</updated><id>//maxxholmes.github.io//100daysofcode/2020/05/10/#100DaysOfCode-Day0</id><content type="html" xml:base="//maxxholmes.github.io//100daysofcode/2020/05/10/100DaysOfCode-Day0.html">&lt;h3 id=&quot;day-0-may-10th-2020&quot;&gt;Day 0: May 10th, 2020&lt;/h3&gt;

&lt;p&gt;I decided to commit to the &lt;strong&gt;#100DaysOfCode&lt;/strong&gt; challenge to improve myself and get ready for the “real world” once I finish my PhD and look for my first career position!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Initial Goals:&lt;/strong&gt; I already can code in some capacity in Python, R, Matlab and C++ but not as strongly as I would like. I have undertaken a BSc Physics, MSc Data Science and am currently undergoing a PhD where I have learned scientific programming to the point where I can implement mathematical models, produce data analysis and visualisations and basic machine learning. I have little to no experience in html, css or js other than some brief skills I learned developing a personal website.&lt;/p&gt;

&lt;p&gt;My goals therefore are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;To improve my scientific programming skills by exploring new methods and problem solving&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;To learn basic html/css/js skills through web development&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I will host or link everything I do on my github &lt;strong&gt;&lt;a href=&quot;https://github.com/MaxxHolmes/&quot;&gt;https://github.com/MaxxHolmes&lt;/a&gt;&lt;/strong&gt;, twitter &lt;strong&gt;&lt;a href=&quot;https://twitter.com/MaxxSci&quot;&gt;@MaxxSci&lt;/a&gt;&lt;/strong&gt;, and on this website I built over the last few days!&lt;/p&gt;

&lt;p&gt;For my first week - I will be solving &lt;strong&gt;&lt;a href=&quot;https://projecteuler.net/&quot;&gt;Project Euler&lt;/a&gt;&lt;/strong&gt; problems to improve my python skills, while I develop this website to be able to host the solutions to those problems, as well as finishing the Projects/Publications/Contact Me pages. I will be using HTML, CSS and JS to do this, and the Jekyll framework to automate the blog settings.&lt;/p&gt;</content><author><name></name></author><summary type="html">Day 0: May 10th, 2020</summary></entry><entry><title type="html">My Personal Website</title><link href="//maxxholmes.github.io//general/2020/05/06/My-Personal-Website.html" rel="alternate" type="text/html" title="My Personal Website" /><published>2020-05-06T23:42:56+01:00</published><updated>2020-05-06T23:42:56+01:00</updated><id>//maxxholmes.github.io//general/2020/05/06/My-Personal-Website</id><content type="html" xml:base="//maxxholmes.github.io//general/2020/05/06/My-Personal-Website.html">&lt;p&gt;Hello! I’m Maxx Holmes, and welcome to my website!&lt;/p&gt;

&lt;p&gt;I developed this website as a personal project to widen my repertoire of skills, and to develop a platform for my online presence as I finish my PhD and go out into the “real world”, whatever that is. I took an online template from Pixelarity and tailored it to my needs using Jekyll to host a blog.&lt;/p&gt;

&lt;p&gt;This first post will serve as an introduction to myself, my interests and the kind of content to expect from this website. Pictured above is the first international conference I ever attended - Heart by Numbers 2018, a Biophysical Society Conference in Berlin, Germany. You can see my big head poking out of the back of the crowd. This was my first real experience networking and presenting my research to a large audience - and it was an excellent experience - but this and other conferences have left me with the important lesson of how important networking and presence is within scientific and academic careers!&lt;/p&gt;

&lt;p&gt;I’m currently in the third year of my doctoral studies in the Leeds Computational Physiology Lab, where my thesis focuses on developing and using computational models and tools to dissect the multi-scale mechanisms underlying cardiac arrhythmias - which is quite a substantial jump from my previous degrees of BSc Physics and MSc Data Science! My interests have always leaned towards the geekier, technical side: gaming, programming, music, cooking and of course, science - each of which can be dissected, torn apart and studied piece by piece.&lt;/p&gt;

&lt;p&gt;The intention of these blog posts is to provide an insight into what a computational PhD is like, some informative guides on what I consider to be essential programming skills for scientists, and some personal projects.&lt;/p&gt;

&lt;p&gt;Outside of academic pursuits, I have also previously been a “semi-professional” gamer, having placed top 6 and above in several UK LAN events for DotA 2 and Guitar Hero 3, and I am current a BHF volunteer. The British Heart Foundation is also something very close to my heart and as such I’m a registered volunteer of the BHF, and trained in CPR and First Aid. I have acted as the treasurer of LUU Heart Beats, the first student-led BHF fundraising group of it’s kind for it’s initial and secondary year 2019/2020, where we have won several awards at Leeds Student Union’s Riley Awards for the Best New Society (2019), Best Volunteering Society (2020) and Best Charity Event (2020).&lt;/p&gt;

&lt;p&gt;That’s a solid first post, I reckon. I hope you’re all staying safe and staying home. Peace xo&lt;/p&gt;</content><author><name></name></author><summary type="html">Hello! I’m Maxx Holmes, and welcome to my website!</summary></entry></feed>